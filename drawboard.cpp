#include<stdio.h>
#include<graphics.h>
#include "header.h"

#define TRIANGLE_HEIGHT 140
#define TRIANGLE_BASE 300
#define TRIANGLE_STARTING 615
#define TRIANGLE_ENDING TRIANGLE_STARTING+TRIANGLE_BASE
#define SPACE_VERTICAL 70

#define BOX_LENGTH 400
#define BOX_STARTING 565
#define BOX_ENDING BOX_STARTING+BOX_LENGTH
#define PLACE_WIDTH BOX_LENGTH/4

void drawBoard(){

    initwindow(1530,850,"GAME");
    setbkcolor(1);


    //top triangle
    line(TRIANGLE_STARTING,SPACE_VERTICAL,TRIANGLE_ENDING,SPACE_VERTICAL);
    line(TRIANGLE_STARTING+TRIANGLE_BASE/4,SPACE_VERTICAL+TRIANGLE_HEIGHT/2,
         TRIANGLE_STARTING+3*TRIANGLE_BASE/4,SPACE_VERTICAL+TRIANGLE_HEIGHT/2);
    line(TRIANGLE_STARTING,SPACE_VERTICAL,BOX_STARTING+BOX_LENGTH/2,SPACE_VERTICAL+TRIANGLE_HEIGHT);
    line(TRIANGLE_ENDING,SPACE_VERTICAL,BOX_STARTING+BOX_LENGTH/2,SPACE_VERTICAL+TRIANGLE_HEIGHT);
    line(TRIANGLE_STARTING+TRIANGLE_BASE/2,SPACE_VERTICAL,TRIANGLE_STARTING+TRIANGLE_BASE/2,SPACE_VERTICAL+TRIANGLE_HEIGHT);


    //box
    line(BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT);
    line(BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH);
    line(BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH,
         BOX_STARTING+BOX_LENGTH,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH);
    line(BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH);

    //grid
    line(BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+PLACE_WIDTH,BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT+PLACE_WIDTH);
    line(BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+2*PLACE_WIDTH,BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT+2*PLACE_WIDTH);
    line(BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+3*PLACE_WIDTH,BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT+3*PLACE_WIDTH);

    line(BOX_STARTING+PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_STARTING+PLACE_WIDTH,SPACE_VERTICAL+BOX_LENGTH+TRIANGLE_HEIGHT);
    line(BOX_STARTING+2*PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_STARTING+2*PLACE_WIDTH,SPACE_VERTICAL+BOX_LENGTH+TRIANGLE_HEIGHT);
    line(BOX_STARTING+3*PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_STARTING+3*PLACE_WIDTH,SPACE_VERTICAL+BOX_LENGTH+TRIANGLE_HEIGHT);

        //diagonals
        line(BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH);
        line(BOX_STARTING+PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH-PLACE_WIDTH);
        line(BOX_STARTING+2*PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH-2*PLACE_WIDTH);
        line(BOX_STARTING+3*PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH-3*PLACE_WIDTH);
        line(BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+PLACE_WIDTH,BOX_ENDING-PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH);
        line(BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+2*PLACE_WIDTH,BOX_ENDING-2*PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH);
        line(BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+3*PLACE_WIDTH,BOX_ENDING-3*PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH);

        line(BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH);
        line(BOX_ENDING-PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH-PLACE_WIDTH);
        line(BOX_ENDING-2*PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH-2*PLACE_WIDTH);
        line(BOX_ENDING-3*PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT,BOX_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH-3*PLACE_WIDTH);
        line(BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT+PLACE_WIDTH,BOX_STARTING+PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH);
        line(BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT+2*PLACE_WIDTH,BOX_STARTING+2*PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH);
        line(BOX_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT+3*PLACE_WIDTH,BOX_STARTING+3*PLACE_WIDTH,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH);



    //bottom triangle
    line(TRIANGLE_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH+TRIANGLE_HEIGHT,
         TRIANGLE_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH+TRIANGLE_HEIGHT);
    line(TRIANGLE_STARTING+TRIANGLE_BASE/4,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH+TRIANGLE_HEIGHT/2,
         TRIANGLE_STARTING+3*TRIANGLE_BASE/4,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH+TRIANGLE_HEIGHT/2);
    line(TRIANGLE_STARTING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH+TRIANGLE_HEIGHT,
         BOX_STARTING+BOX_LENGTH/2,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH);
    line(TRIANGLE_ENDING,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH+TRIANGLE_HEIGHT,
         BOX_STARTING+BOX_LENGTH/2,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH);
    line(TRIANGLE_STARTING+TRIANGLE_BASE/2,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH,
         TRIANGLE_STARTING+TRIANGLE_BASE/2,SPACE_VERTICAL+TRIANGLE_HEIGHT+BOX_LENGTH+TRIANGLE_HEIGHT);

    getch();
    closegraph();
}
